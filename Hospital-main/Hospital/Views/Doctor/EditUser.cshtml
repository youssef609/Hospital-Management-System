@using System.Security.Claims
@model Hospital.Models.Doctor

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Admin&DoctorLayout.cshtml";
}
<div class="row">
    <div class="d-flex justify-content-center bg-white">
        <form asp-action="EditUser">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group justify-content-center">
                <!-- Image preview -->
                @{
                    string imageSrc = Model.Image != null ? $"data:image/jpeg;base64,{Convert.ToBase64String(Model.Image)}" : "#";
                }
                <img id="imagePreview" src="@imageSrc" alt="Image Preview" style=" max-width: 300px; margin: 10px 0px;"  />
                <span asp-validation-for="Image" class="text-danger"></span>
                <input asp-for="Image" id="imageInput" class="form-control" type="file" onchange="convertImageToByteArray()" />
                <input type="hidden" id="imageByteArray" name="ImageData" />
            </div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>

@*             <div class="form-group">
                <label asp-for="PasswordHash" class="control-label" >New Password</label>
                <input asp-for="PasswordHash" class="form-control" value="" type="password"/>
                <span asp-validation-for="PasswordHash" class="text-danger"></span>
            </div> *@

            <div>
                <input type="submit" value="Save" class="btn btn-primary" style="margin: 10px 0px;" />
                <a asp-action="DetailsUser" asp-controller="Doctor" asp-route-doctorId="@User.FindFirstValue(ClaimTypes.NameIdentifier)" class="btn btn-outline-secondary">Cancel</a>
            </div>

        </form>
    </div>
</div>


<script>

    var imagePreview = document.getElementById('imagePreview');
    var hiddenInput = document.getElementById('imageByteArray');
    var base64String = imagePreview.src.split(',')[1];
    var binaryString = atob(base64String);

    var byteArray = new Uint8Array(binaryString.length);

    for (var i = 0; i < binaryString.length; i++) {
        byteArray[i] = binaryString.charCodeAt(i);
    }
    hiddenInput.value = byteArray.join(',')



    function convertImageToByteArray() {
        var fileInput = document.getElementById('imageInput');
        var file = fileInput.files[0]; // Get the selected file

        if (file) {
            // First, handle the image preview
            var previewReader = new FileReader();

            previewReader.onload = function (e) {
                var imagePreview = document.getElementById('imagePreview');
                imagePreview.src = e.target.result; // Set the image preview to the file
                imagePreview.style.display = 'block'; // Display the image preview
            };

            previewReader.readAsDataURL(file); // Read file for image preview

            // Now handle converting the image to a byte array
            var arrayBufferReader = new FileReader();

            arrayBufferReader.onload = function (e) {
                var byteArray = new Uint8Array(e.target.result); // Convert to byte array
                var hiddenInput = document.getElementById('imageByteArray');
                hiddenInput.value = byteArray.join(','); // Store byte array as a comma-separated string
            };

            arrayBufferReader.readAsArrayBuffer(file); // Read file for byte array conversion
        }
    }
</script>

